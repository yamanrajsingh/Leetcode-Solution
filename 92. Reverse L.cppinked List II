/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseBetween(ListNode* head, int left, int right) {
        if(head==NULL || head->next==NULL || left==right )
        {
            return head;
        }
        ListNode  ans(0);
        ans.next=head;
        ListNode* curr = head;
        ListNode* pre =&ans;
      for(int i=1;i<left;i++)
        {
            pre=curr;
            curr=curr->next;
        }
        ListNode* temp = curr;
        ListNode* pre1=nullptr;
       for(int i= left;i<=right;i++)
       {
           ListNode* next=curr->next;
           curr->next=pre1;
           pre1=curr;
           curr=next;
       }
       pre->next=pre1;
       temp->next=curr;
        return ans.next;
    }
};